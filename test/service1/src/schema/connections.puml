@startuml
package "api" as api {
  package "http" as api.http {
    [mainController] as mainController
  }
}
package "service" as service {
  package "external" as service.external {
    package "jms" as service.external.jms {
      [jmsQueue1Listener] as jmsQueue1Listener
    }
    package "rest" as service.external.rest {
      [service2LegacyImpl] as service2LegacyImpl
      [standaloneService2Api] as standaloneService2Api
      [service2FeignClient] as service2FeignClient
    }
    package "ws" as service.external.ws {
      [service2StreamClientImpl] as service2StreamClientImpl
    }
  }
}
package "internal" as internal {
  package "ws" as internal.ws {
    package "EventsHandler" as internal.ws.EventsHandler {
      [eventsHandler] as eventsHandler
    }
  }
}
mainController ..> service2LegacyImpl
service2LegacyImpl ..> restTemplate
service2StreamClientImpl ..> webSocketClient
eventsHandler ..> webSocketConfig
rectangle "in" as in {
  cloud "http" as in.http {
    interface "GET:/api/v1/req" as mainController.in.http.GET..api.v1.req
    mainController.in.http.GET..api.v1.req ).. mainController
    interface "*:/api/v1/" as mainController.in.http...api.v1.
    mainController.in.http...api.v1. ).. mainController
  }
}
rectangle "out" as out {
  cloud "http" as out.http {
    interface "GET:/{id}" as standaloneService2Api.out.http.GET..id
    standaloneService2Api ..( standaloneService2Api.out.http.GET..id
    interface "GET:/{id}" as service2FeignClient.out.http.GET..id
    service2FeignClient ..( service2FeignClient.out.http.GET..id
  }
}
@enduml
